================ MariaDB MySQL queries ================

========== INSERT query ==========

1. Inregistrarea pe platforma a unui nou angajat
INSERT INTO angajati (`Departament_ID`,`Nume`,
`Prenume`,`Sex`,`Adresa`,`CNP`,`Username`,`Parola`,
`Data_angajarii`, `Data_nasterii`) 
VALUES(?,?,?,?,?,?,?,?,?,?)

2. Inregistrarea pe platforma a unui nou client
INSERT INTO clienti (`Nume`,`Prenume`,`CNP`,`Sex`,
`Adresa`,`Telefon`,`Username`,`Parola`,`Data_nasterii`)
VALUES(?,?,?,?,?,?,?,?,?)

3. Asignarea unei sarcini unuia dintre angajati (manager only)
INSERT INTO `angajati-sarcini` (`Angajat_ID`, `Sarcina_ID`) 
VALUES(?,?)

4. Emiterea unei sarcini de catre un client
INSERT INTO sarcini 
(`Serviciu_ID`,`Client_ID`,`Detalii`,`Data`) 
VALUES(?,?,?,?)

==================================

========== UPDATE query ==========

1. Editarea datelor de profil ale unui client
UPDATE `clienti` SET 
`Nume`=?, `Prenume`=?, `Telefon`=?, `Adresa`=? 
WHERE `Client_ID`=?

2. Editarea datelor de profil ale unui angajat
UPDATE `angajati` SET 
`Nume`=?, `Prenume`=?, `Adresa`=?, `Username`=? 
WHERE `Angajat_ID`=?

3. Actualizarea statusului unei sarcini in momentul in care este
pasata unui angajat
UPDATE `sarcini` SET `Status`= 'In procesare' 
WHERE `Sarcina_ID`=?

4. Actualizarea complexitatii unei sarcini
UPDATE `sarcini` SET `Complexitate`=? 
WHERE `Sarcina_ID`=?

5. Actualizarea statusului unei sarcini in momentul in care 
a fost marcata de angajat ca fiind finalizata
UPDATE `sarcini` SET `Status`= 'Finalizat' WHERE `Sarcina_ID`=?

==================================

========== DELETE query ==========

1. Stergerea unui angajat (manager only)
DELETE FROM `angajati` WHERE `CNP`=?

2. Stergearea unei sarcini din angajati-sarcini
in momentul in care a fost finalizata
DELETE FROM `angajati-sarcini` WHERE `Sarcina_ID`=?

==================================

=========== JOIN query ===========

1. Logarea unui angajat/manager
SELECT * FROM angajati LEFT JOIN departamente 
ON angajati.Angajat_ID=departamente.Manager_ID 
WHERE angajati.Username=? AND angajati.Parola=?

2. Afisare informatii despre toti angajatii, respectiv 
despre departamentul fiecaruia, mai putin despre angajatul 
care este logat in acel moment pe site (managerul nu isi atribuie
singur task-uri)
SELECT Nume, Prenume, Denumire, CNP, Angajat_ID 
FROM angajati 
JOIN departamente on angajati.Departament_ID = departamente.Departament_ID 
AND angajati.Angajat_ID!=? 
AND angajati.Departament_ID=?

3. Afisarea tuturor sarcinilor nefinalizate, respectiv a 
departamentului corespunzator
SELECT sarcini.Detalii, departamente.Denumire 
FROM sarcini 
JOIN servicii on sarcini.Serviciu_ID = servicii.Serviciu_ID 
JOIN departamente 
on servicii.DepartamentID = departamente.Departament_ID 
WHERE sarcini.Status = 'Nefinalizat' AND servicii.DepartamentID=?

4. Selectarea tuturor sarcinilor a caror complexitate nu a fost inca
atribuita de managerul corespunzator departamentului din care face
parte sarcina
SELECT sarcini.Detalii, sarcini.Sarcina_ID, departamente.Denumire 
FROM sarcini 
JOIN servicii on sarcini.Serviciu_ID = servicii.Serviciu_ID 
JOIN departamente on servicii.DepartamentID = departamente.Departament_ID 
WHERE sarcini.Complexitate = '0' AND servicii.DepartamentID=?

5. Afisarea tuturor sarcinilor care se afla in procesare
respectiv a angajatului care se ocupa de fiecare sarcina in parte
in functie de departament
SELECT sarcini.Detalii, day(sarcini.Data) as Zi, 
month(sarcini.Data) as Luna, year(sarcini.Data) as An, 
Nume, Prenume FROM sarcini 
JOIN `servicii` on `servicii`.`Serviciu_ID` = sarcini.Serviciu_ID 
JOIN `angajati-sarcini` on sarcini.Sarcina_ID = `angajati-sarcini`.`Sarcina_ID` 
JOIN `angajati` on angajati.Angajat_ID = `angajati-sarcini`.`Angajat_ID` 
WHERE sarcini.Status = 'In procesare' AND servicii.DepartamentID=?

6. Afisarea tuturor sarcinilor asignate unui angajat
SELECT clienti.Adresa, clienti.Telefon, sarcini.Detalii, 
day(sarcini.Data) as Zi, month(sarcini.Data) as Luna, 
year(sarcini.Data) as An, sarcini.Sarcina_ID 
FROM sarcini 
JOIN `angajati-sarcini` on `angajati-sarcini`.`Sarcina_ID` = sarcini.Sarcina_ID 
JOIN clienti on clienti.Client_ID = sarcini.Client_ID 
where `angajati-sarcini`.`Angajat_ID`=?

7. Angajatii care lucreaza la task-uri de complexitate maxima
SELECT A.Nume, A.Prenume 
FROM angajati A 
join `angajati-sarcini` AnS on A.Angajat_ID=AnS.Angajat_ID 
join sarcini S on Ans.Sarcina_ID = S.Sarcina_ID 
where S.Complexitate = 5 AND A.Departament_ID=1

==================================

============ Subquery ============

1. Numarul de sarcini aflate in procesare pentru fiecare angajat, in functie
de departament.
SELECT A.Nume, A.Prenume, ( SELECT COUNT(*) 
FROM `angajati-sarcini` AP WHERE AP.Angajat_ID = A.Angajat_ID) AS NumarProiecte 
FROM angajati A where A.Departament_ID=? AND A.Angajat_ID !=?

2. Toti angajatii fiecarui departament ordonati dupa data nasterii
SELECT A.Nume, A.Prenume, day(A.Data_nasterii) AS Zi, 
month(A.Data_nasterii) AS Luna, year(A.Data_nasterii) 
AS An FROM angajati A, 
(SELECT A2.Angajat_ID FROM angajati A2 WHERE A2.Departament_ID=?) AS AD 
WHERE A.Angajat_ID = AD.Angajat_ID 
ORDER BY A.Data_nasterii ASC

3. Angajatii care nu au asignat nicio sarcina
SELECT A.Nume, A.Prenume FROM angajati A 
WHERE A.Angajat_ID NOT IN 
(SELECT DISTINCT A2.Angajat_ID 
FROM angajati A2, `angajati-sarcini` AP 
WHERE A2.Angajat_ID = AP.Angajat_ID) 
AND A.Departament_ID=? AND A.Angajat_ID !=?

4. Clientii care au emis task-uri si care 
au fost finalizate pentru acest departament
SELECT C.Nume, C.Prenume, C.Telefon FROM clienti C, 
(SELECT C2.Client_ID 
FROM clienti C2 join sarcini S on C2.Client_ID = S.Client_ID 
join servicii SV on SV.Serviciu_ID = S.Serviciu_ID 
WHERE SV.DepartamentID=1 AND S.Status = 'Finalizat') AS C3 
WHERE C.Client_ID = C3.Client_ID 
group by C.Nume, C.Prenume, C.Telefon

5. Afisarea numarului de task-uri aflate In procesare pentru un anumit client (VARIABIL)
SELECT C.Nume, C.Prenume, (SELECT COUNT(*) FROM sarcini S 
JOIN `angajati-sarcini` ASar on ASar.Sarcina_ID = S.Sarcina_ID 
WHERE S.Client_ID = ?) AS NumarTaskuri 
FROM clienti C WHERE C.Client_ID = ?

==================================

==================================================================
Alte query-uri

- logarea unui client 
SELECT * FROM clienti WHERE Username = ? AND Parola = ?

SELECT S.Sarcina_ID, S.Detalii FROM sarcini S
WHERE 
(SELECT C.Client_ID from clienti C
JOIN `angajati-sarcini` AS on AS.Sarcina_ID = S.Sarcina_ID
where S.Client_ID = C.Client_ID) = 9


